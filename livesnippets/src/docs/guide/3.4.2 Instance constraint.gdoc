Grails @validator@ constraints make it possible to validate a complete object in stead of validating only one field.
You are however forced to define the validator on one field (you can repeat the validator on multiple fields, but then
the same error gets displayed multiple times).

An instance constraint does not have to be defined on a field. It only requires a (unique) declarative name:

{groovySrc:class=Order|from=creditCheck|inline=true}
{groovySrc}

If you want to access the error object, just define a second argument in the validator closure:
{code}
sortedCollection(validator: { myDomain, errors ->
    if (myDomain?.collection != myDomain?.collection?.clone()?.sort()) {
        errors.reject('unsorted')
    }
})
{code}