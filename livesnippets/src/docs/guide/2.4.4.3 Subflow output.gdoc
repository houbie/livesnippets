Just like methods, subflows can return objects to the calling flow in an end state:
{groovySrc:class=DeveloperController|from=selected|inline=true}
{groovySrc}

The calling flow  can retrieve the result from the @currentEvent.attributes@, the same way as in standard Spring Web Flow:
{groovySrc:class=ProjectController|from=on("selected")|inline=true}
{groovySrc}

Output values can be either constant (created at flow definition time) or dynamic (calculated at flow execution time).
Dynamic values need to be defined with a closure.

The snippet below summarizes all possible ways to define flow output.
{code}
subflowEndState {
    output {
        // the constant value will only once be assigned at flow definition time and will remain the same for all executions
        outX(value: someVariable)

        // same as outX
        outY(someVariable)

        // the dynamic value will be evaluated each time the flow ends
        dynamicOut { params.x + flow.y }

        // the dynamic value will be evaluated each time the flow ends
        dynamicOut bis(value: someClosure)
    }
}
...
{code}

{note}
Subflow output is only supported from grails 1.4.0 onward. In prior versions flash and conversation scope can be used
for passing objects from a subflow to the calling flow.
{note}
